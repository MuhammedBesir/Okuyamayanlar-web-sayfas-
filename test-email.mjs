// Email Test Script - Production'da email √ßalƒ±≈üƒ±yor mu test eder

import nodemailer from 'nodemailer';

console.log('üìß Email Configuration Test\n');
console.log('‚îÅ'.repeat(60));

// Environment variables kontrol√º
const emailConfig = {
    host: process.env.EMAIL_HOST || 'MISSING',
    port: process.env.EMAIL_PORT || 'MISSING',
    secure: process.env.EMAIL_SECURE === 'true',
    user: process.env.EMAIL_USER || 'MISSING',
    password: process.env.EMAIL_PASSWORD ? '***SET***' : 'MISSING',
    from: process.env.EMAIL_FROM || 'MISSING',
    fromName: process.env.EMAIL_FROM_NAME || 'MISSING'
};

console.log('üîç Environment Variables Check:\n');
Object.entries(emailConfig).forEach(([key, value]) => {
    const status = value === 'MISSING' ? '‚ùå' : '‚úÖ';
    console.log(`${status} ${key}: ${value}`);
});

console.log('\n‚îÅ'.repeat(60));

// Test email g√∂nderimi
async function testEmail() {
    if (emailConfig.user === 'MISSING' || emailConfig.password === 'MISSING') {
        console.log('\n‚ùå ERROR: Email environment variables eksik!');
        console.log('\nVercel\'de ≈üunlarƒ± kontrol edin:');
        console.log('- EMAIL_HOST');
        console.log('- EMAIL_PORT');
        console.log('- EMAIL_SECURE');
        console.log('- EMAIL_USER');
        console.log('- EMAIL_PASSWORD (Gmail App Password)');
        console.log('- EMAIL_FROM');
        console.log('- EMAIL_FROM_NAME');
        return;
    }

    console.log('\nüì§ Attempting to send test email...\n');

    try {
        const transporter = nodemailer.createTransport({
            host: process.env.EMAIL_HOST,
            port: parseInt(process.env.EMAIL_PORT || '587'),
            secure: process.env.EMAIL_SECURE === 'true',
            auth: {
                user: process.env.EMAIL_USER,
                pass: process.env.EMAIL_PASSWORD
            }
        });

        // Test connection
        await transporter.verify();
        console.log('‚úÖ SMTP Connection: SUCCESS');

        // Send test email
        const info = await transporter.sendMail({
            from: `"${process.env.EMAIL_FROM_NAME}" <${process.env.EMAIL_FROM}>`,
            to: process.env.EMAIL_USER,
            subject: 'Test Email - Okuyamayanlar',
            text: 'Bu bir test emailidir. Email sistemi √ßalƒ±≈üƒ±yor!',
            html: '<h1>‚úÖ Email √áalƒ±≈üƒ±yor!</h1><p>Bu bir test emailidir.</p>'
        });

        console.log('‚úÖ Email Sent: SUCCESS');
        console.log(`üìß Message ID: ${info.messageId}`);
        console.log('\nüéâ EMAIL Sƒ∞STEMƒ∞ √áALI≈ûIYOR!\n');

    } catch (error) {
        console.log('‚ùå EMAIL ERROR:', error.message);

        if (error.code === 'EAUTH') {
            console.log('\nüîê Authentication hatasƒ±!');
            console.log('√á√∂z√ºm:');
            console.log('1. Gmail App Password doƒüru mu kontrol edin');
            console.log('2. https://myaccount.google.com/apppasswords');
            console.log('3. Yeni App Password olu≈üturun');
            console.log('4. Vercel\'de EMAIL_PASSWORD\'√º g√ºncelleyin');
        } else if (error.code === 'ECONNECTION') {
            console.log('\nüåê Connection hatasƒ±!');
            console.log('√á√∂z√ºm:');
            console.log('1. EMAIL_HOST doƒüru mu: smtp.gmail.com');
            console.log('2. EMAIL_PORT doƒüru mu: 587');
            console.log('3. EMAIL_SECURE: false olmalƒ± (587 port i√ßin)');
        }
    }
}

testEmail();
